# 퍼즐 조각 채우기
# https://programmers.co.kr/learn/courses/30/lessons/84021
'''
테이블 위에 놓인 퍼즐 조각을 게임 보드의 빈 공간에 적절히 올려놓으려 합니다. 게임 보드와 테이블은 모두 각 칸이 1x1 크기인 정사각 격자 모양입니다. 이때, 다음 규칙에 따라 테이블 위에 놓인 퍼즐 조각을 게임 보드의 빈칸에 채우면 됩니다.
조각은 한 번에 하나씩 채워 넣습니다.
"조각을 회전시킬 수 있습니다."
조각을 뒤집을 수는 없습니다.
"게임 보드에 새로 채워 넣은 퍼즐 조각과 인접한 칸이 비어있으면 안 됩니다."
다음은 퍼즐 조각을 채우는 예시입니다.

위 그림에서 왼쪽은 현재 게임 보드의 상태를, 오른쪽은 테이블 위에 놓인 퍼즐 조각들을 나타냅니다. 테이블 위에 놓인 퍼즐 조각들 또한 마찬가지로 [상,하,좌,우]로 인접해 붙어있는 경우는 없으며, 흰 칸은 퍼즐이 놓이지 않은 빈 공간을 나타냅니다. 모든 퍼즐 조각은 격자 칸에 딱 맞게 놓여있으며, 격자 칸을 벗어나거나, 걸쳐 있는 등 잘못 놓인 경우는 없습니다.
이때, 아래 그림과 같이 3,4,5번 조각을 격자 칸에 놓으면 규칙에 어긋나므로 불가능한 경우입니다.

3번 조각을 놓고 4번 조각을 놓기 전에 위쪽으로 인접한 칸에 빈칸이 생깁니다.
5번 조각의 양 옆으로 인접한 칸에 빈칸이 생깁니다.
다음은 규칙에 맞게 최대한 많은 조각을 게임 보드에 채워 넣은 모습입니다.

최대한 많은 조각을 채워 넣으면 총 14칸을 채울 수 있습니다.
현재 게임 보드의 상태 game_board, 테이블 위에 놓인 퍼즐 조각의 상태 table이 매개변수로 주어집니다. 규칙에 맞게 최대한 많은 퍼즐 조각을 채워 넣을 경우, 총 몇 칸을 채울 수 있는지 return 하도록 solution 함수를 완성해주세요.

1. 일단 게임보드에 있는 빈칸 찾고, 빈칸의 형태에서 -> 4가지 회전의 형태 중 하나와 동일한 table의 블록을 찾는다.?
2. 찾고 나서 테이블은 000으로 처리해준다.(삭제)
3. 게임보드에는 111으로 처리해 준다.


[게임 보드]
1 0
0 0
1 0

[테이블]
0 1 0
1 1 1

게임보드에서 0을 가지고 dfs 돌면서 동시에..?

아니면 테이블을 가지고 4번 돌면 너무 비효율적인가?

만약 그렇게 돈다고 해도, 찾을 수 있나?
찾는 것에 실패하면 다시 돌아가야 할 텐데..
돌아가면서 0 다시 채우고 

bb
b
를 딕셔너리 키로 넣을 수있나?
-> 가능.

그럼 먼저 딕셔너리 키로 일단 4가지 방향 다 넣고

일단 테이블에서 1인 것 찾아서
테이블에서는 보통 dfs처럼 진행
그리고 게임보드에서는 


[노드로 풀기]

노드에 위아래좌우 링크 포함해서 만들기
테이블에 있는 퍼즐 다 만들어주고 리스트에 싹 다 집어넣어주기,,,?
젠장 몰것다


'''



def solution(game_board, table):
    answer = -1

    for i in range(len(game_board)):
        for j in range(len(game_board[0])):
            if game_board[i][j] == 0:
                need2fill= []
                dfsInGameboard(i, j, 1)
                    # fill = 1 일단은..
                answer += 1

    def dfsInGameboard(i, j, fill):
        pass

    def dfsInTable():
        pass

    return answer